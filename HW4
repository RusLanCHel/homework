package lessonD;
/// 2222222222222222222222
public class Main2 {
    private static Object printer1 = new Object();
    private static Object printer2 = new Object();

    public static void main(String[] args) {
        Thread human1 = new Thread(new Runnable() {
            @Override
            public void run() {
                System.out.println("Human1 подошел к принтеру 1");
                synchronized (printer1){
                    System.out.println("Human1 распечатывает на принтере 1");
                    try {
                        Thread.sleep(4000);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                    System.out.println("Human1 ушел от принтера 1");
                }
            }
        });

        Thread human2 = new Thread(new Runnable() {
            @Override
            public void run() {
                System.out.println("Human2 подошел к принтеру 1");
                synchronized (printer1){
                    System.out.println("Human2 отправил на принтер 1 скан");
                    try {
                        Thread.sleep(4000);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                    System.out.println("Human2 ушел от принтера 1");
                }
            }
        });
        Thread human3 = new Thread(new Runnable() {
            @Override
            public void run() {
                System.out.println("Human3 подошел к принтеру 2");
                synchronized (printer2){
                    System.out.println("Human3 распечатывает на принтере 2");
                    try {
                        Thread.sleep(4000);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                    System.out.println("Human3 ушел от принтера 2");
                }
            }
        });
        human1.start();
        try {
            Thread.sleep(1000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        human2.start();
        try {
            Thread.sleep(1000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        human3.start();
    }
}

/// 1111111111111
package lessonD;

public class Main {
    private static Object mon = new Object();
    private static char currentLetter = 'A';

    public static void main(String[] args) {
        Main main = new Main();
        Thread t1 = new Thread(() -> {
            main.printA();
        });
        Thread t2 = new Thread(() -> {
            main.printB();
        });
        Thread t3 = new Thread(() -> {
            main.printC();
        });
        t1.start();
        t2.start();
        t3.start();
    }

    public void printA(){
        synchronized (mon){
            try {
                for(int i = 0; i < 6; i++){
                    while(currentLetter != 'A'){
                        mon.wait();
                    }
                    System.out.print("A");
                    currentLetter = 'B';
                    mon.notifyAll();
                }
            } catch (InterruptedException e){
                e.printStackTrace();
            }
        }
    }

    public void printB(){
        synchronized (mon){
            try {
                for(int i = 0; i < 6; i++){
                    while(currentLetter != 'B'){
                        mon.wait();
                    }
                    System.out.print("B");
                    currentLetter = 'C';
                    mon.notifyAll();
                }
            } catch (InterruptedException e){
                e.printStackTrace();
            }
        }
    }
    public void printC(){
        synchronized (mon){
            try {
                for(int i = 0; i < 6; i++){
                    while(currentLetter != 'C'){
                        mon.wait();
                    }
                    System.out.print("C");
                    currentLetter = 'A';
                    mon.notifyAll();
                }
            } catch (InterruptedException e){
                e.printStackTrace();
            }
        }
    }
}
